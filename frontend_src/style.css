*
{
    font-family: Calibri, Helvetica, sans-serif;
}

/* Overriding default browser CSS */
p, h3
{
    margin: 0;
}

button
{
    height: 1.6em;
}

select
{
    height: 1.6em;
}

/* global */
.svg-button:hover
{
    cursor: pointer;
}

textarea
{
    resize: vertical;
}

/* specific elements */
#content
{
    min-width: 800px;
    max-width: 95%;
    margin: auto;
}

#header
{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: baseline;
    height: 80px;
    background-color: white;
}

#center-view
{
    margin-top: 90px;

    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
}

#date-view-container
{
    width: 70%;
}

#notes-container
{
    width: 25%;
}

/* header */
.sticky-header
{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 71px;  /* this looks a bit odd without context, but lines up the border on the sidebar and the header */
    background-color: white;
    border-bottom: 1px solid lightgray;

    display: flex;
    flex-direction: row;
    align-items: baseline;
}

.header-sidebar-toggle-btn
{
    margin-left: 1em;
}

.header-content
{
    min-width: 700px;
    width: 100%;
    
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: baseline;
    margin-left: 1em;
    margin-right: 1em;
}

.header-flush-right
{
    display: flex;
    flex-direction: row;
    align-items: baseline;
}

.header-date-selector
{
    margin-left: 0.5em;
    font-size: 2em;
    font-weight: bold;
    border: none;
}

.header-date-selector:focus
{
    outline: none;
}

.header-save-indicator
{
    opacity: 0;
    transition: opacity 0.75s;
}

.header-save-indicator-opaque
{
    opacity: 1;
}

/* sidebar */
.sidebar-container
{
    position: fixed;
    top: 0;
    left: 0;

    display: flex;
    flex-direction: row;

    /* This feels a bit hacky to me. When the sidebar is not open, I don't want this div to be clickable. When it is
       open, I want width to be maxed. However, when transitioning back into the closed state, setting width immediately
       to zero will hide the sidebar. */
    transition: width 0.5s;
    width: 0;
    height: 100%;

    z-index: 1;
}

.sidebar-container.sidebar-shown
{
    width: 100%;
}

.sidebar-body
{
    background-color: white;
    border-right: 1px solid lightgray;
    width: 0px;
    height: 100%;
    transition: width 0.25s;
    overflow: hidden;
    white-space: nowrap;
}

.sidebar-body.sidebar-shown
{
    width: 300px;
}

.sidebar-close-clickable-div
{
    flex-grow: 1;
    height: 100%;
    display: none;
}

.sidebar-close-clickable-div.sidebar-shown
{
    display: block;
}

.sidebar-title
{
    padding: 16px;
    border-bottom: 1px solid lightgray;
    margin: 0;
}

.sidebar-clickable-item
{
    padding: 1em;
    border-bottom: 1px solid lightgray;
}

.sidebar-clickable-item:hover
{
    background-color: darkgray;
    cursor: pointer;
}

/* form entry components */
.entry-multi-row-field
{
    display: flex;
    flex-direction: column;
    margin: 1em 0em;
}

.entry-single-row-field
{
    display: flex;
    flex-direction: row;
    margin: 0.25em 0em;
}

.entry-single-row-field > :first-child
{
    margin-right: 0.25em;
}

.entry-textarea
{
    min-height: 25vh;
    max-height: 75vh;
}

/* task components */
.task-container
{
    display: flex;
    flex-direction: row;
    width: 100%;

    margin-bottom: 1em;
    /* transition: max-height 0.25s; */
}

.task
{
    width: 100%;
}

.task-always-shown
{
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.task-name-goal-container
{
    width: 70%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.task-name
{
    width: 70%;
    margin-right: 1em;
}

.task-goal
{
    text-align: right;
}

.task-flush-right-container
{
    width: 20%;
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
}

.task-notes
{
    /* This is a pretty nasty CSS hack for the weird HTML structure I'm using for the dropdown button. The result is
       that this aligns the end of the notes with the end of the goal. Ideally I move to a CSS preprocessor, where this
       might at least make a bit more sense with a bit more context. */
    width: calc((100% + 24px) * .7);
    white-space: pre-wrap;
    overflow-y: auto;
}

textarea.task-notes
{
    height: 6em;
}

/* Dynamic heights make animating this in CSS a bit more difficult. This visually looks good but there's an annoying 
   delay when minimizing (the initial transition is making a ridiculously large max-height smaller, which doesn't affect
   the height we see). */
.task-hideable-container
{
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;

    max-height: 0;
    overflow: hidden;
    transition: max-height 0.5s ease-out;
}

.task-hideable-container-shown
{
    max-height: 50vh;
    transition: max-height 0.5s ease-in;
}

.task-hideable-container-contents
{
    margin-top: 1em;
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.task-modification-container
{
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
}

.task-modification-container > :first-child
{
    margin-right: 0.5em;
}

.task-dropdown-button
{
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    width: 24px;
}

.editable-task-goal-container
{
    position: relative;
}

.editable-task-goal-fuzzy-search-results
{
    position: absolute;
    min-width: 100%;
    width: max-content;
    top: 100%;
    background-color: white;
    z-index: 1;
}

.editable-task-goal-result
{
    padding: 0.5em;
    border: 1px solid lightgray;
    border-top: 0px;
}

.editable-task-goal-fuzzy-search-results > :first-child
{
    border-top: 1px solid lightgray;
}

.editable-task-goal-result:hover
{
    background-color: lightgray;
}

.editable-task-goal-result-selected
{
    background-color: darkgray !important;  /* overriding the hover */
}

/* modal components */
.modal
{
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;

    position: fixed;
    z-index: 2;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
}

.modal-content
{
    width: 30%;

    border: 2px solid black;
    padding: 1.5em;
    background-color: white;
}

.modal-content-header
{
    display: flex;
    flex-direction: row;
    justify-content: space-between;

    margin-bottom: 1em;
}

.confirmation-modal-confirm-row
{
    margin-top: 1em;
    display: flex;
    width: 50%;
}

.confirmation-modal-confirm-row > *
{
    margin-right: 0.5em;
}